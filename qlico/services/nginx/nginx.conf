pid /tmp/nginx.pid;
events {
}
http {
    server_tokens off;
    charset utf-8;

    map $request_uri $loggable {
        default 1;
        ~*\.(ico|css|js|gif|jpg|jpeg|png|svg|woff|ttf|eot)$ 0;
        ~/healthz$ 0;
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    keepalive_timeout 200s;
    sendfile on;
    tcp_nopush on;
    client_max_body_size 100M;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/vnd.ms-fontobject
    application/wasm
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/bmp
    image/svg+xml
    text/cache-manifest
    text/calendar
    text/css
    text/javascript
    text/markdown
    text/plain
    text/xml
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    add_header Cache-Control "no-transform";

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    map $http_x_forwarded_proto $https_flag {
        default "";
        https on;
    }
    server {
        access_log /dev/stdout main if=$loggable;
        error_log /dev/stdout;

        listen 8080 default_server;
        listen [::]:8080 default_server;

        root /var/www/html/public;

        server_name _;

        location /nginx-healthz {
            access_log off;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            expires off;
            return 204;
        }

        location ~ /\.(?!well-known).* {
            deny all;
            access_log off;
            log_not_found off;
        }

        location = /robots.txt {
            allow all;
            rewrite ^(.*)$ /robots.php last;
        }

        location ~ ^/(clear_opcache|robots)\.php(/|$) {
            include fastcgi_params;
            fastcgi_pass unix:/php-socket/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            expires off;
        }

        location / {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            include fastcgi_params;
            fastcgi_pass unix:/php-socket/php-fpm.sock;
            fastcgi_read_timeout 600s;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            fastcgi_param HTTPS $https_flag;
            internal;
        }

        # return 404 for all other php files not matching the front controller
        # this prevents access to other php files you don't want to be accessible.
        location ~ \.php$ {
            return 404;
        }
    }
}
