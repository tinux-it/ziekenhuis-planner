name: linter

on:
  push:
    branches:
      - develop
      - main
permissions:
  contents: write

jobs:
#  linting:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.4'
#
#      - name: Add Flux Credentials Loaded From ENV
#        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"
#
#      - name: Install Dependencies
#        run: |
#          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#          npm install
#
#      - name: Run Pint
#        run: vendor/bin/pint
#
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.4
#          tools: composer:v2
#          coverage: xdebug
#
#      - name: Setup Node
#        uses: actions/setup-node@v4
#        with:
#          node-version: '22'
#          cache: 'npm'
#
#      - name: Install Node Dependencies
#        run: npm i
#
#      - name: Add Flux Credentials Loaded From ENV
#        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"
#
#      - name: Install Dependencies
#        run: composer install --no-interaction --prefer-dist --optimize-autoloader
#
#      - name: Copy Environment File
#        run: cp .env.example .env
#
#      - name: Generate Application Key
#        run: php artisan key:generate
#
#      - name: Build Assets
#        run: npm run build
#
#      - name: Run Tests
#        run: ./vendor/bin/pest

  build:
    runs-on: ubuntu-latest
#    needs: [tests, linting]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer:v2

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-scripts

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'

      - name: Install and build assets
        run: |
          npm install
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=prod,enable={{is_default_branch}}
            type=raw,value=dev,enable=${{ github.ref != 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Set up kubectl
#        uses: azure/setup-kubectl@v4
#        with:
#          version: 'latest'
#
#      - name: Configure kubeconfig
#        run: |
#          mkdir -p $HOME/.kube
#          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
#          chmod 600 $HOME/.kube/config
#
#      - name: Deploy to Kubernetes cluster
#        run: |
#          kubectl rollout restart deployment/ziekenhuis-planner -n tomemming
